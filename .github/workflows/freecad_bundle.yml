name: toponaming_package
on:
  workflow_dispatch:

jobs:
  build-bundles:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: [py38, py310]
        tag: ["toponaming-build"]
        docs: ["0"]
        exclude:
          - os: macos-latest
            python: py38
          - os: ubuntu-latest
            python: py38
          

    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          use-mamba: true
          miniforge-variant: Mambaforge

      - if: matrix.os == 'ubuntu-latest'
        name: update linux
        run: |
          sudo apt-get update -qq && sudo apt-get install -y desktop-file-utils jq zsync;
          apt-get download libc6;
          dpkg -x libc6*.deb libc6;
          curl -LO https://raw.githubusercontent.com/AppImage/AppImages/master/pkg2appimage;
          curl -LO https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage;
          chmod a+x appimagetool-x86_64.AppImage;

      - if: matrix.os == 'ubuntu-latest'
        name: create linux bundle
        run: "bash ./create_bundle.sh"
        working-directory: conda/linux
        env:
            DEPLOY_RELEASE: ${{ matrix.tag }}
            ADD_DOCS: ${{ matrix.docs }}

      - if: (matrix.os == 'ubuntu-latest' && github.event_name != 'pull_request')
        name: delete old linux assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: ${{ matrix.tag }}
          assets: FreeCAD*Linux-x86_64*
          fail-if-no-assets: false
          fail-if-no-release: false

      - if: (matrix.os == 'ubuntu-latest' && github.event_name != 'pull_request')
        name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: conda/linux/FreeCAD*
          tag: ${{ matrix.tag }}
          overwrite: true
          file_glob: true
